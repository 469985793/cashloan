<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- arc_borrow_rule_config表:借款规则详细配置表模块 -->
<mapper namespace="com.xindaibao.cashloan.rule.mapper.BorrowRuleConfigMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.xindaibao.cashloan.rule.domain.BorrowRuleConfig">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="borrow_rule_id" property="borrowRuleId" jdbcType="BIGINT" />
        <result column="rule_id" property="ruleId" jdbcType="BIGINT" />
        <result column="rule_sort" property="ruleSort" jdbcType="INTEGER" />
        <result column="config_id" property="configId" jdbcType="BIGINT" />
        <result column="config_sort" property="configSort" jdbcType="INTEGER" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,borrow_rule_id,rule_id,rule_sort,config_id,config_sort 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id != null and id != '' ">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="borrowRuleId != null and borrowRuleId != '' ">
                and borrow_rule_id = #{borrowRuleId,jdbcType=BIGINT}
            </if>
            <if test="ruleId != null and ruleId != '' ">
                and rule_id = #{ruleId,jdbcType=BIGINT}
            </if>
            <if test="ruleSort != null and ruleSort != '' ">
                and rule_sort = #{ruleSort,jdbcType=INTEGER}
            </if>
            <if test="configId != null and configId != '' ">
                and config_id = #{configId,jdbcType=BIGINT}
            </if>
            <if test="configSort != null and configSort != '' ">
                and config_sort = #{configSort,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.xindaibao.cashloan.rule.domain.BorrowRuleConfig">
        insert into arc_borrow_rule_config(borrow_rule_id,rule_id,rule_sort,config_id,config_sort)values(#{borrowRuleId,jdbcType=BIGINT},#{ruleId,jdbcType=BIGINT},#{ruleSort,jdbcType=INTEGER},#{configId,jdbcType=BIGINT},#{configSort,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.xindaibao.cashloan.rule.domain.BorrowRuleConfig">
        update arc_borrow_rule_config set 
            borrow_rule_id = #{borrowRuleId,jdbcType=BIGINT},
            rule_id = #{ruleId,jdbcType=BIGINT},
            rule_sort = #{ruleSort,jdbcType=INTEGER},
            config_id = #{configId,jdbcType=BIGINT},
            config_sort = #{configSort,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update arc_borrow_rule_config
          <set>
            <if test="borrowRuleId != null and borrowRuleId != '' ">        
                borrow_rule_id = #{borrowRuleId,jdbcType=BIGINT},                
            </if>
            <if test="ruleId != null and ruleId != '' ">        
                rule_id = #{ruleId,jdbcType=BIGINT},                
            </if>
            <if test="ruleSort != null and ruleSort != '' ">        
                rule_sort = #{ruleSort,jdbcType=INTEGER},                
            </if>
            <if test="configId != null and configId != '' ">        
                config_id = #{configId,jdbcType=BIGINT},                
            </if>
            <if test="configSort != null and configSort != '' ">        
                config_sort = #{configSort,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from arc_borrow_rule_config
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from arc_borrow_rule_config
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from arc_borrow_rule_config
        <include refid="searchBy"/>
    </select>
    
    <delete id="deleteByBorrowRuleId" parameterType="java.util.HashMap">
        delete from arc_borrow_rule_config  where borrow_rule_id = #{borrowRuleId,jdbcType=BIGINT}
    </delete>
    
     <delete id="deleteById" parameterType="java.lang.Long">
        delete from arc_borrow_rule_config  where id = #{id,jdbcType=BIGINT}
    </delete>
    
     <delete id="deleteByMap" parameterType="java.util.HashMap" >
        delete from arc_borrow_rule_config   where   rule_id = #{ruleId,jdbcType=BIGINT} 
          <if test="configId != null and configId != '' ">        
          and  config_id = #{configId,jdbcType=BIGINT}
         </if>
    </delete>
    <select id="findBorrowRuleId" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    	select  c.borrow_rule_id,c.rule_sort,e.rule_count as config_sort  from  arc_borrow_rule_config  c LEFT JOIN arc_borrow_rule_engine e on c.borrow_rule_id=e.id where c.rule_id=  #{ruleId,jdbcType=BIGINT}  group by c.borrow_rule_id 
    </select>
    
    
    
</mapper>
